// <auto-generated />
using System;
using MatrixResponsibility.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace MatrixResponsibility.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("MatrixResponsibility.Common.BKP", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("DirectorId")
                        .HasColumnType("integer")
                        .HasColumnName("director_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("DirectorId");

                    b.ToTable("bkps");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DirectorId = 2,
                            Name = "БКП №1"
                        },
                        new
                        {
                            Id = 2,
                            DirectorId = 2,
                            Name = "БКП №2"
                        },
                        new
                        {
                            Id = 3,
                            DirectorId = 2,
                            Name = "БКП №3"
                        },
                        new
                        {
                            Id = 4,
                            DirectorId = 2,
                            Name = "БКП №4"
                        },
                        new
                        {
                            Id = 5,
                            DirectorId = 2,
                            Name = "БКП №5"
                        },
                        new
                        {
                            Id = 6,
                            DirectorId = 2,
                            Name = "БКП №6"
                        },
                        new
                        {
                            Id = 7,
                            DirectorId = 2,
                            Name = "БКП №7"
                        });
                });

            modelBuilder.Entity("MatrixResponsibility.Common.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("AB")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("ab");

                    b.Property<int?>("AKId")
                        .HasColumnType("integer")
                        .HasColumnName("ak_id");

                    b.Property<int?>("AssistantGIPId")
                        .HasColumnType("integer")
                        .HasColumnName("assistant_gip_id");

                    b.Property<int?>("BKPId")
                        .HasColumnType("integer")
                        .HasColumnName("bkp_id");

                    b.Property<string>("Customer")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("customer");

                    b.Property<DateTime?>("DateEndRD")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_end_rd");

                    b.Property<DateTime?>("DateFirstApproval")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_first_approval");

                    b.Property<DateTime?>("DateStartPD")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_start_pd");

                    b.Property<DateTime?>("DateStartRD")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date_start_rd");

                    b.Property<int?>("EOMId")
                        .HasColumnType("integer")
                        .HasColumnName("eom_id");

                    b.Property<int?>("GAPId")
                        .HasColumnType("integer")
                        .HasColumnName("gap_id");

                    b.Property<int?>("GIPId")
                        .HasColumnType("integer")
                        .HasColumnName("gip_id");

                    b.Property<int?>("GKPId")
                        .HasColumnType("integer")
                        .HasColumnName("gkp_id");

                    b.Property<int?>("GPId")
                        .HasColumnType("integer")
                        .HasColumnName("gp_id");

                    b.Property<DateTime?>("GPZUDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("gpzu_date");

                    b.Property<string>("InternalMeeting")
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("internal_meeting");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean")
                        .HasColumnName("isactive");

                    b.Property<string>("MarketingName")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("marketing_name");

                    b.Property<string>("ObjectAddress")
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("object_address");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("project_name");

                    b.Property<string>("ReportStatus")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("report_status");

                    b.Property<int?>("ResponsibleId")
                        .HasColumnType("integer")
                        .HasColumnName("responsible_id");

                    b.Property<int?>("SSId")
                        .HasColumnType("integer")
                        .HasColumnName("ss_id");

                    b.Property<double?>("SaleableArea")
                        .HasColumnType("double precision")
                        .HasColumnName("saleable_area");

                    b.Property<string>("StartPermissionLetter")
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("start_permission_letter");

                    b.Property<double?>("TotalArea")
                        .HasColumnType("double precision")
                        .HasColumnName("total_area");

                    b.HasKey("Id");

                    b.HasIndex("AKId");

                    b.HasIndex("AssistantGIPId");

                    b.HasIndex("BKPId");

                    b.HasIndex("EOMId");

                    b.HasIndex("GAPId");

                    b.HasIndex("GIPId");

                    b.HasIndex("GKPId");

                    b.HasIndex("GPId");

                    b.HasIndex("ResponsibleId");

                    b.HasIndex("SSId");

                    b.ToTable("projects");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.ProjectCorrection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("ApprovalDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("approval_date");

                    b.Property<int>("CorrectionNumber")
                        .HasColumnType("integer")
                        .HasColumnName("correction_number");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("project_corrections");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("description");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Администратор",
                            Name = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Директор БКП",
                            Name = "dbkp"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Главный инженер проекта",
                            Name = "gip"
                        });
                });

            modelBuilder.Entity("MatrixResponsibility.Common.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("email");

                    b.Property<string>("FIO")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("fio");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("login");

                    b.HasKey("Id");

                    b.ToTable("users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "ivanov@olimproekt.ru",
                            FIO = "Иванов Максим Леонидович",
                            Login = "ivanov"
                        },
                        new
                        {
                            Id = 2,
                            Email = "tsarev@olimproekt.ru",
                            FIO = "Царев Михаил Александрович",
                            Login = "tsarev"
                        },
                        new
                        {
                            Id = 3,
                            Email = "vladimir@olimproekt.ru",
                            FIO = "Ковалёв Владимир Александрович",
                            Login = "vladimir"
                        },
                        new
                        {
                            Id = 4,
                            Email = "empty@olimproekt.ru",
                            FIO = "empty empty empty",
                            Login = "empty"
                        },
                        new
                        {
                            Id = 5,
                            Email = "not_found@olimproekt.ru",
                            FIO = "not_found not_found not_found",
                            Login = "not_found"
                        });
                });

            modelBuilder.Entity("MatrixResponsibility.Common.UserRole", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("integer")
                        .HasColumnName("user_id");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer")
                        .HasColumnName("role_id");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("user_roles");

                    b.HasData(
                        new
                        {
                            UserId = 1,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 2,
                            RoleId = 1
                        },
                        new
                        {
                            UserId = 3,
                            RoleId = 1
                        });
                });

            modelBuilder.Entity("MatrixResponsibility.Common.BKP", b =>
                {
                    b.HasOne("MatrixResponsibility.Common.User", "Director")
                        .WithMany()
                        .HasForeignKey("DirectorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Director");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.Project", b =>
                {
                    b.HasOne("MatrixResponsibility.Common.User", "AK")
                        .WithMany()
                        .HasForeignKey("AKId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "AssistantGIP")
                        .WithMany()
                        .HasForeignKey("AssistantGIPId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.BKP", "BKP")
                        .WithMany("Projects")
                        .HasForeignKey("BKPId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "EOM")
                        .WithMany()
                        .HasForeignKey("EOMId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "GAP")
                        .WithMany()
                        .HasForeignKey("GAPId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "GIP")
                        .WithMany()
                        .HasForeignKey("GIPId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "GKP")
                        .WithMany()
                        .HasForeignKey("GKPId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "GP")
                        .WithMany()
                        .HasForeignKey("GPId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "Responsible")
                        .WithMany()
                        .HasForeignKey("ResponsibleId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("MatrixResponsibility.Common.User", "SS")
                        .WithMany()
                        .HasForeignKey("SSId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("AK");

                    b.Navigation("AssistantGIP");

                    b.Navigation("BKP");

                    b.Navigation("EOM");

                    b.Navigation("GAP");

                    b.Navigation("GIP");

                    b.Navigation("GKP");

                    b.Navigation("GP");

                    b.Navigation("Responsible");

                    b.Navigation("SS");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.ProjectCorrection", b =>
                {
                    b.HasOne("MatrixResponsibility.Common.Project", "Project")
                        .WithMany("Corrections")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.UserRole", b =>
                {
                    b.HasOne("MatrixResponsibility.Common.Role", "Role")
                        .WithMany("UserRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MatrixResponsibility.Common.User", "User")
                        .WithMany("UserRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.BKP", b =>
                {
                    b.Navigation("Projects");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.Project", b =>
                {
                    b.Navigation("Corrections");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.Role", b =>
                {
                    b.Navigation("UserRoles");
                });

            modelBuilder.Entity("MatrixResponsibility.Common.User", b =>
                {
                    b.Navigation("UserRoles");
                });
#pragma warning restore 612, 618
        }
    }
}
